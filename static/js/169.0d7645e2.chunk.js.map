{"version":3,"file":"static/js/169.0d7645e2.chunk.js","mappings":"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","sources":["../node_modules/react-record-webcam/dist/component/Controls.js","../node_modules/react-record-webcam/dist/component/Video.js","../node_modules/react-record-webcam/dist/component/index.js","../node_modules/react-record-webcam/dist/constants.js","../node_modules/react-record-webcam/dist/hook/index.js","../node_modules/react-record-webcam/dist/index.js","../node_modules/react-record-webcam/dist/mediaRecorder.js","../node_modules/react-record-webcam/dist/types.js","../node_modules/react-record-webcam/dist/utils.js","../node_modules/recordrtc/RecordRTC.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.Controls = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar constants_1 = require(\"../constants\");\nexports.Controls = function (props) {\n    var _a, _b, _c, _d, _e, _f;\n    var showOpenCamera = props.status !== constants_1.CAMERA_STATUS.OPEN &&\n        props.status !== constants_1.CAMERA_STATUS.RECORDING &&\n        props.status !== constants_1.CAMERA_STATUS.PREVIEW;\n    var showCloseCamera = props.status !== constants_1.CAMERA_STATUS.CLOSED &&\n        (props.status === constants_1.CAMERA_STATUS.OPEN || constants_1.CAMERA_STATUS.RECORDING);\n    var showStart = props.status === constants_1.CAMERA_STATUS.OPEN;\n    var showStop = props.status === constants_1.CAMERA_STATUS.RECORDING;\n    var showRetake = props.status === constants_1.CAMERA_STATUS.PREVIEW;\n    var showDownload = props.status === constants_1.CAMERA_STATUS.PREVIEW;\n    return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n        react_1[\"default\"].createElement(\"style\", null, \"\\n          .\" + props.cssNamespace + \"__controls {\\n            display: -webkit-box;\\n            display: -ms-flexbox;\\n            display: flex;\\n            -webkit-box-orient: horizontal;\\n            -webkit-box-direction: normal;\\n            -ms-flex-flow: row nowrap;\\n                    flex-flow: row nowrap;\\n          }\\n        \"),\n        react_1[\"default\"].createElement(\"div\", { className: props.cssNamespace + \"__controls\" },\n            showOpenCamera && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.openCamera }, ((_a = props.labels) === null || _a === void 0 ? void 0 : _a.OPEN) || constants_1.BUTTON_LABELS.OPEN)),\n            showCloseCamera && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.closeCamera }, ((_b = props.labels) === null || _b === void 0 ? void 0 : _b.CLOSE) || constants_1.BUTTON_LABELS.CLOSE)),\n            showStart && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.start }, ((_c = props.labels) === null || _c === void 0 ? void 0 : _c.START) || constants_1.BUTTON_LABELS.START)),\n            showStop && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.stop }, ((_d = props.labels) === null || _d === void 0 ? void 0 : _d.STOP) || constants_1.BUTTON_LABELS.STOP)),\n            showRetake && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.retake }, ((_e = props.labels) === null || _e === void 0 ? void 0 : _e.RETAKE) || constants_1.BUTTON_LABELS.RETAKE)),\n            showDownload && (react_1[\"default\"].createElement(\"button\", { className: props.cssNamespace + \"__controls-button\", onClick: props.download }, ((_f = props.labels) === null || _f === void 0 ? void 0 : _f.DOWNLOAD) || constants_1.BUTTON_LABELS.DOWNLOAD)))));\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.Video = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nexports.Video = react_1[\"default\"].forwardRef(function (_a, ref) {\n    var autoPlay = _a.autoPlay, cssNamespace = _a.cssNamespace, muted = _a.muted, loop = _a.loop, style = _a.style;\n    return (react_1[\"default\"].createElement(\"video\", { style: style, className: cssNamespace + \"__video\", autoPlay: autoPlay, muted: muted, ref: ref, loop: loop }));\n});\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.RecordWebcam = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar Video_1 = require(\"./Video\");\nvar Controls_1 = require(\"./Controls\");\nvar mediaRecorder_1 = require(\"../mediaRecorder\");\nvar utils_1 = require(\"../utils\");\nvar constants_1 = require(\"../constants\");\nvar RecordWebcam = /** @class */ (function (_super) {\n    __extends(RecordWebcam, _super);\n    function RecordWebcam(props) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            status: constants_1.CAMERA_STATUS.CLOSED\n        };\n        _this.recorderOptions = __assign(__assign({}, constants_1.RECORDER_OPTIONS), {\n            mimeType: \"video/\" + (((_a = _this.props.options) === null || _a === void 0 ? void 0 : _a.fileType) || 'mp4') + \";codecs=\" + (((_c = (_b = _this.props.options) === null || _b === void 0 ? void 0 : _b.codec) === null || _c === void 0 ? void 0 : _c.video) ||\n                ((_d = _this.props.options) === null || _d === void 0 ? void 0 : _d.fileType) === 'webm'\n                ? 'vp8'\n                : 'avc') + \",\" + (((_f = (_e = _this.props.options) === null || _e === void 0 ? void 0 : _e.codec) === null || _f === void 0 ? void 0 : _f.audio) ||\n                ((_g = _this.props.options) === null || _g === void 0 ? void 0 : _g.fileType) === 'webm'\n                ? 'opus'\n                : 'aac'),\n            width: ((_h = _this.props.options) === null || _h === void 0 ? void 0 : _h.width) || constants_1.RECORDER_OPTIONS.width,\n            height: ((_j = _this.props.options) === null || _j === void 0 ? void 0 : _j.height) || constants_1.RECORDER_OPTIONS.height,\n            aspectRatio: ((_k = _this.props.options) === null || _k === void 0 ? void 0 : _k.aspectRatio) || constants_1.RECORDER_OPTIONS.aspectRatio,\n            isNewSize: Boolean(((_l = _this.props.options) === null || _l === void 0 ? void 0 : _l.width) || ((_m = _this.props.options) === null || _m === void 0 ? void 0 : _m.height))\n        });\n        _this.webcamRef = react_1[\"default\"].createRef();\n        _this.previewRef = react_1[\"default\"].createRef();\n        _this.closeCamera = _this.closeCamera.bind(_this);\n        _this.download = _this.download.bind(_this);\n        _this.getRecording = _this.getRecording.bind(_this);\n        _this.handleOpenCamera = _this.handleOpenCamera.bind(_this);\n        _this.handleError = _this.handleError.bind(_this);\n        _this.handleCloseCamera = _this.handleCloseCamera.bind(_this);\n        _this.handleRetakeRecording = _this.handleRetakeRecording.bind(_this);\n        _this.handleStartRecording = _this.handleStartRecording.bind(_this);\n        _this.handleStopRecording = _this.handleStopRecording.bind(_this);\n        _this.openCamera = _this.openCamera.bind(_this);\n        return _this;\n    }\n    RecordWebcam.prototype.componentDidUpdate = function (_, prevState) {\n        if (this.state.status !== prevState.status) {\n            if (this.props.getStatus)\n                this.props.getStatus(this.state.status);\n        }\n    };\n    RecordWebcam.prototype.openCamera = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var recorderInit;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, mediaRecorder_1.mediaRecorder(this.recorderOptions)];\n                    case 1:\n                        recorderInit = _a.sent();\n                        this.recorder = recorderInit;\n                        if (this.webcamRef.current) {\n                            this.webcamRef.current.srcObject = recorderInit.stream;\n                        }\n                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 1700); })];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.closeCamera = function () {\n        if (this.recorder.stream.id)\n            this.recorder.stream.stop();\n    };\n    RecordWebcam.prototype.handleCloseCamera = function () {\n        if (this.previewRef.current) {\n            this.previewRef.current.removeAttribute('src');\n            this.previewRef.current.load();\n        }\n        this.setState({ status: constants_1.CAMERA_STATUS.CLOSED });\n        this.closeCamera();\n    };\n    RecordWebcam.prototype.handleError = function (error) {\n        this.setState({\n            status: constants_1.CAMERA_STATUS.ERROR\n        });\n        console.error({ error: error });\n    };\n    RecordWebcam.prototype.handleOpenCamera = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.setState({\n                            status: constants_1.CAMERA_STATUS.INIT\n                        });\n                        return [4 /*yield*/, this.openCamera()];\n                    case 1:\n                        _a.sent();\n                        this.setState({\n                            status: constants_1.CAMERA_STATUS.OPEN\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        this.handleError(error_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.handleStartRecording = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var length_1, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, , 6]);\n                        return [4 /*yield*/, this.recorder.startRecording()];\n                    case 1:\n                        _b.sent();\n                        this.setState({\n                            status: constants_1.CAMERA_STATUS.RECORDING\n                        });\n                        if (!((_a = this.props.options) === null || _a === void 0 ? void 0 : _a.recordingLength)) return [3 /*break*/, 4];\n                        length_1 = this.props.options.recordingLength * 1000;\n                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, length_1); })];\n                    case 2:\n                        _b.sent();\n                        return [4 /*yield*/, this.handleStopRecording()];\n                    case 3:\n                        _b.sent();\n                        this.closeCamera();\n                        _b.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        error_2 = _b.sent();\n                        this.handleError(error_2);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.handleStopRecording = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var blob, preview, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this.recorder.stopRecording()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.recorder.getBlob()];\n                    case 2:\n                        blob = _a.sent();\n                        preview = window.URL.createObjectURL(blob);\n                        if (this.previewRef.current) {\n                            this.previewRef.current.src = preview;\n                        }\n                        this.closeCamera();\n                        this.setState({\n                            status: constants_1.CAMERA_STATUS.PREVIEW\n                        });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_3 = _a.sent();\n                        this.handleError(error_3);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.handleRetakeRecording = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.handleOpenCamera()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_4 = _a.sent();\n                        this.handleError(error_4);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.download = function () {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var blob, filename, error_5;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.recorder.getBlob()];\n                    case 1:\n                        blob = _c.sent();\n                        filename = (((_a = this.props.options) === null || _a === void 0 ? void 0 : _a.filename) || new Date().getTime()) + \".\" + (((_b = this.props.options) === null || _b === void 0 ? void 0 : _b.fileType) || 'mp4');\n                        utils_1.saveFile(filename, blob);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_5 = _c.sent();\n                        this.handleError(error_5);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.getRecording = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var error_6;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, ((_a = this.recorder) === null || _a === void 0 ? void 0 : _a.getBlob())];\n                    case 1: return [2 /*return*/, _b.sent()];\n                    case 2:\n                        error_6 = _b.sent();\n                        this.handleError(error_6);\n                        return [2 /*return*/];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RecordWebcam.prototype.render = function () {\n        var _a, _b;\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(\"style\", null, \"\\n            .\" + this.props.cssNamespace + \"__wrapper {\\n              display: -webkit-box;\\n              display: -ms-flexbox;\\n              display: flex;\\n              -webkit-box-orient: vertical;\\n              -webkit-box-direction: normal;\\n              -ms-flex-flow: column nowrap;\\n                      flex-flow: column nowrap;\\n              -webkit-box-pack: justify;\\n              -ms-flex-pack: justify;\\n                      justify-content: space-between;\\n            }\\n            .\" + this.props.cssNamespace + \"__status {\\n              margin: 1rem 0;\\n            }\\n          \"),\n            react_1[\"default\"].createElement(\"div\", { className: this.props.cssNamespace + \"__wrapper\" }, (_b = (_a = this.props) === null || _a === void 0 ? void 0 : _a.render) === null || _b === void 0 ? void 0 :\n                _b.call(_a, {\n                    openCamera: this.handleOpenCamera,\n                    closeCamera: this.handleCloseCamera,\n                    start: this.handleStartRecording,\n                    stop: this.handleStopRecording,\n                    retake: this.handleRetakeRecording,\n                    download: this.download,\n                    getRecording: this.getRecording,\n                    status: this.state.status\n                }),\n                !this.props.render && (react_1[\"default\"].createElement(\"div\", { className: this.props.cssNamespace + \"__status\" }, \"Status: \" + this.state.status)),\n                !this.props.render && (react_1[\"default\"].createElement(Controls_1.Controls, { closeCamera: this.handleCloseCamera, cssNamespace: this.props.cssNamespace, download: this.download, getRecording: this.getRecording, labels: this.props.controlLabels, openCamera: this.handleOpenCamera, retake: this.handleRetakeRecording, start: this.handleStartRecording, status: this.state.status, stop: this.handleStopRecording })),\n                react_1[\"default\"].createElement(Video_1.Video, { cssNamespace: this.props.cssNamespace, style: {\n                        display: \"\" + (this.state.status !== constants_1.CAMERA_STATUS.CLOSED &&\n                            (this.state.status === constants_1.CAMERA_STATUS.OPEN ||\n                                this.state.status === constants_1.CAMERA_STATUS.RECORDING)\n                            ? 'block'\n                            : 'none')\n                    }, autoPlay: true, muted: true, loop: true, ref: this.webcamRef }),\n                react_1[\"default\"].createElement(Video_1.Video, { cssNamespace: this.props.cssNamespace, style: {\n                        display: \"\" + (this.state.status !== constants_1.CAMERA_STATUS.CLOSED &&\n                            this.state.status === constants_1.CAMERA_STATUS.PREVIEW\n                            ? 'block'\n                            : 'none')\n                    }, autoPlay: true, muted: true, loop: true, ref: this.previewRef }))));\n    };\n    RecordWebcam.defaultProps = {\n        cssNamespace: constants_1.NAMESPACES.CSS\n    };\n    return RecordWebcam;\n}(react_1[\"default\"].PureComponent));\nexports.RecordWebcam = RecordWebcam;\n","\"use strict\";\nexports.__esModule = true;\nexports.NAMESPACES = exports.BUTTON_LABELS = exports.CAMERA_STATUS = exports.RECORDER_OPTIONS = exports.OPTIONS = void 0;\nexports.OPTIONS = {\n    filename: String(new Date().getTime()),\n    recordingLength: 3,\n    fileType: 'mp4',\n    width: 1920,\n    height: 1080,\n    aspectRatio: 1.777777778\n};\nexports.RECORDER_OPTIONS = {\n    type: 'video',\n    mimeType: 'video/mp4',\n    disableLogs: true,\n    width: 1280,\n    height: 720,\n    aspectRatio: 1.77,\n    isNewSize: false\n};\nexports.CAMERA_STATUS = {\n    INIT: 'INIT',\n    CLOSED: 'CLOSED',\n    OPEN: 'OPEN',\n    RECORDING: 'RECORDING',\n    PREVIEW: 'PREVIEW',\n    ERROR: 'ERROR'\n};\nexports.BUTTON_LABELS = {\n    OPEN: 'Open camera',\n    CLOSE: 'Close camera',\n    START: 'Start recording',\n    STOP: 'Stop recording',\n    RETAKE: 'Retake recording',\n    DOWNLOAD: 'Download recording'\n};\nexports.NAMESPACES = {\n    CSS: 'react-record-webcam'\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.useRecordWebcam = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar mediaRecorder_1 = require(\"../mediaRecorder\");\nvar utils_1 = require(\"../utils\");\nvar constants_1 = require(\"../constants\");\nfunction useRecordWebcam(options) {\n    var _this = this;\n    var webcamRef = react_1[\"default\"].useRef(null);\n    var previewRef = react_1[\"default\"].useRef(null);\n    var _a = react_1[\"default\"].useState(constants_1.CAMERA_STATUS.CLOSED), status = _a[0], setStatus = _a[1];\n    var _b = react_1[\"default\"].useState(null), recorder = _b[0], setRecorder = _b[1];\n    var _c = react_1[\"default\"].useState(constants_1.RECORDER_OPTIONS), recorderOptions = _c[0], setRecorderOptions = _c[1];\n    react_1[\"default\"].useEffect(function () {\n        var _a, _b;\n        if (options) {\n            setRecorderOptions(__assign(__assign({}, constants_1.RECORDER_OPTIONS), { mimeType: \"video/\" + (options.fileType || 'mp4') + \";codecs=\" + (((_a = options === null || options === void 0 ? void 0 : options.codec) === null || _a === void 0 ? void 0 : _a.video) || options.fileType === 'webm' ? 'vp8' : 'avc') + \",\" + (((_b = options === null || options === void 0 ? void 0 : options.codec) === null || _b === void 0 ? void 0 : _b.audio) || options.fileType === 'webm' ? 'opus' : 'aac'), width: options.width || constants_1.RECORDER_OPTIONS.width, height: options.height || constants_1.RECORDER_OPTIONS.height, aspectRatio: (options === null || options === void 0 ? void 0 : options.aspectRatio) || constants_1.RECORDER_OPTIONS.aspectRatio, isNewSize: Boolean((options === null || options === void 0 ? void 0 : options.width) || (options === null || options === void 0 ? void 0 : options.height)) }));\n        }\n    }, []);\n    var openCamera = function () { return __awaiter(_this, void 0, void 0, function () {\n        var recorderInit;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, mediaRecorder_1.mediaRecorder(recorderOptions)];\n                case 1:\n                    recorderInit = _a.sent();\n                    setRecorder(recorderInit);\n                    if (webcamRef === null || webcamRef === void 0 ? void 0 : webcamRef.current) {\n                        webcamRef.current.srcObject = recorderInit.stream;\n                    }\n                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 1700); })];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var stopStream = function () {\n        if (recorder === null || recorder === void 0 ? void 0 : recorder.stream.id)\n            recorder.stream.stop();\n    };\n    var close = function () {\n        if (previewRef === null || previewRef === void 0 ? void 0 : previewRef.current) {\n            previewRef.current.removeAttribute('src');\n            previewRef.current.load();\n        }\n        setStatus(constants_1.CAMERA_STATUS.CLOSED);\n        stopStream();\n    };\n    var open = function () { return __awaiter(_this, void 0, void 0, function () {\n        var error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    setStatus(constants_1.CAMERA_STATUS.INIT);\n                    return [4 /*yield*/, openCamera()];\n                case 1:\n                    _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.OPEN);\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_1 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_1 });\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n    var stop = function () { return __awaiter(_this, void 0, void 0, function () {\n        var blob, preview, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 4, , 5]);\n                    if (!(recorder === null || recorder === void 0 ? void 0 : recorder.stopRecording)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, recorder.stopRecording()];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, recorder.getBlob()];\n                case 2:\n                    blob = _a.sent();\n                    preview = window.URL.createObjectURL(blob);\n                    if (previewRef.current) {\n                        previewRef.current.src = preview;\n                    }\n                    stopStream();\n                    setStatus(constants_1.CAMERA_STATUS.PREVIEW);\n                    return [2 /*return*/];\n                case 3: throw new Error('Stop recording error!');\n                case 4:\n                    error_2 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_2 });\n                    return [3 /*break*/, 5];\n                case 5: return [2 /*return*/];\n            }\n        });\n    }); };\n    var start = function () { return __awaiter(_this, void 0, void 0, function () {\n        var length_1, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 6, , 7]);\n                    if (!(recorder === null || recorder === void 0 ? void 0 : recorder.startRecording)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, recorder.startRecording()];\n                case 1:\n                    _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.RECORDING);\n                    if (!(options === null || options === void 0 ? void 0 : options.recordingLength)) return [3 /*break*/, 4];\n                    length_1 = options.recordingLength * 1000;\n                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, length_1); })];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, stop()];\n                case 3:\n                    _a.sent();\n                    stopStream();\n                    _a.label = 4;\n                case 4: return [2 /*return*/];\n                case 5: throw new Error('Recorder not initialized!');\n                case 6:\n                    error_3 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_3 });\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    }); };\n    var retake = function () { return __awaiter(_this, void 0, void 0, function () {\n        var error_4;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, open()];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_4 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_4 });\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n    var download = function () { return __awaiter(_this, void 0, void 0, function () {\n        var blob, filename, error_5;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 4]);\n                    if (!(recorder === null || recorder === void 0 ? void 0 : recorder.getBlob)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, recorder.getBlob()];\n                case 1:\n                    blob = _a.sent();\n                    filename = ((options === null || options === void 0 ? void 0 : options.filename) || new Date().getTime()) + \".\" + ((options === null || options === void 0 ? void 0 : options.fileType) || 'mp4');\n                    utils_1.saveFile(filename, blob);\n                    return [2 /*return*/];\n                case 2: throw new Error('Error downloading file!');\n                case 3:\n                    error_5 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_5 });\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    var getRecording = function () { return __awaiter(_this, void 0, void 0, function () {\n        var error_6;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, (recorder === null || recorder === void 0 ? void 0 : recorder.getBlob())];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2:\n                    error_6 = _a.sent();\n                    setStatus(constants_1.CAMERA_STATUS.ERROR);\n                    console.error({ error: error_6 });\n                    return [2 /*return*/];\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n    return {\n        close: close,\n        download: download,\n        open: open,\n        previewRef: previewRef,\n        retake: retake,\n        getRecording: getRecording,\n        start: start,\n        status: status,\n        stop: stop,\n        stopStream: stopStream,\n        webcamRef: webcamRef\n    };\n}\nexports.useRecordWebcam = useRecordWebcam;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\n__exportStar(require(\"./component\"), exports);\n__exportStar(require(\"./hook\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./constants\"), exports);\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports.mediaRecorder = exports.captureUserMedia = void 0;\n// @ts-ignore\nvar recordrtc_1 = require(\"recordrtc\");\nfunction captureUserMedia(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var stream, recordRtc;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, navigator.mediaDevices.getUserMedia({\n                        video: true,\n                        audio: true\n                    })];\n                case 1:\n                    stream = _a.sent();\n                    recordRtc = new recordrtc_1.RecordRTCPromisesHandler(stream, __assign({}, options));\n                    return [2 /*return*/, { stream: stream, recordRtc: recordRtc }];\n            }\n        });\n    });\n}\nexports.captureUserMedia = captureUserMedia;\nfunction mediaRecorder(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, stream, recordRtc, supported, tracks;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!navigator.mediaDevices.getUserMedia) {\n                        throw new Error('Browser does not support getUserMedia');\n                    }\n                    return [4 /*yield*/, captureUserMedia(options)];\n                case 1:\n                    _a = _b.sent(), stream = _a.stream, recordRtc = _a.recordRtc;\n                    supported = navigator.mediaDevices.getSupportedConstraints();\n                    if (!supported.width || !supported.height) {\n                        console.error('Media device does not support setting width/height!');\n                    }\n                    if (options.isNewSize && supported.width && supported.height) {\n                        tracks = stream.getTracks();\n                        tracks.forEach(function (track) {\n                            if (track.kind === 'video') {\n                                track.applyConstraints({\n                                    width: options.width,\n                                    height: options.height,\n                                    aspectRatio: options.aspectRatio\n                                });\n                            }\n                        });\n                    }\n                    return [2 /*return*/, __assign(__assign({}, recordRtc), { stream: stream })];\n            }\n        });\n    });\n}\nexports.mediaRecorder = mediaRecorder;\n","\"use strict\";\nexports.__esModule = true;\n","\"use strict\";\nexports.__esModule = true;\nexports.saveFile = void 0;\nexports.saveFile = function (filename, blob) {\n    if (window.navigator.msSaveOrOpenBlob !== undefined) {\n        window.navigator.msSaveBlob(blob, filename);\n        return;\n    }\n    var elem = window.document.createElement('a');\n    elem.style.display = 'none';\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n};\n","'use strict';\r\n\r\n// Last time updated: 2021-03-09 3:20:22 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.2'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.2';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n    if (fileExtension.indexOf(';') !== -1) {\r\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\r\n        fileExtension = fileExtension.split(';')[0];\r\n    }\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\r\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\r\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.2';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n"],"names":["__importDefault","this","mod","__esModule","exports","Controls","react_1","require","constants_1","props","_a","_b","_c","_d","_e","_f","showOpenCamera","status","CAMERA_STATUS","OPEN","RECORDING","PREVIEW","showCloseCamera","CLOSED","showStart","showStop","showRetake","showDownload","createElement","Fragment","cssNamespace","className","onClick","openCamera","labels","BUTTON_LABELS","closeCamera","CLOSE","start","START","stop","STOP","retake","RETAKE","download","DOWNLOAD","Video","forwardRef","ref","autoPlay","muted","loop","style","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","RecordWebcam","Video_1","Controls_1","mediaRecorder_1","utils_1","_super","_g","_h","_j","_k","_l","_m","_this","state","recorderOptions","RECORDER_OPTIONS","mimeType","options","fileType","codec","video","audio","width","height","aspectRatio","isNewSize","Boolean","webcamRef","createRef","previewRef","bind","getRecording","handleOpenCamera","handleError","handleCloseCamera","handleRetakeRecording","handleStartRecording","handleStopRecording","componentDidUpdate","prevState","getStatus","recorderInit","mediaRecorder","recorder","current","srcObject","stream","setTimeout","id","removeAttribute","load","setState","error","ERROR","console","error_1","INIT","length_1","error_2","startRecording","recordingLength","blob","preview","error_3","stopRecording","getBlob","window","URL","createObjectURL","src","error_4","filename","error_5","Date","getTime","saveFile","error_6","render","controlLabels","display","defaultProps","NAMESPACES","CSS","PureComponent","OPTIONS","String","type","disableLogs","useRecordWebcam","useRef","useState","setStatus","setRecorder","setRecorderOptions","useEffect","stopStream","open","Error","close","__createBinding","o","m","k","k2","undefined","defineProperty","enumerable","get","__exportStar","captureUserMedia","recordrtc_1","recordRtc","navigator","mediaDevices","getUserMedia","RecordRTCPromisesHandler","supported","getSupportedConstraints","getTracks","forEach","track","kind","applyConstraints","msSaveOrOpenBlob","elem","document","href","appendChild","click","removeChild","msSaveBlob","RecordRTC","mediaStream","config","RecordRTCConfiguration","self","initRecorder","initCallback","Recorder","GetRecorderType","record","log","name","callback","resumeRecording","warn","_callback","warningLog","__blob","keys","key","bytesToSize","size","url","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","mozGetUserMedia","reader","FileReader","onload","event","target","webWorker","_function","Blob","toString","worker","revokeObjectURL","processInWebWorker","onmessage","data","handleRecordingDuration","counter","recordingDuration","onRecordingStopped","onStateChanged","WARNING","returnObject","config2","version","clearRecordedData","pauseRecording","pause","resume","setRecordingDuration","toURL","getInternalRecorder","save","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","duration","image","bufferSize","sampleRate","buffer","reset","getState","destroy","disableLogsCache","Storage","AudioContextConstructor","prop","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","MediaRecorder","split","bitsPerSecond","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","gif","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","videoTrack","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","output","callback00","webkitURL","_audioDataURL","_videoDataURL","writeToDisk","args","module","Fetch","_type","replace","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","that","global","userAgent","documentElement","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","HTMLVideoElement","location","protocol","hash","screen","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","timeToCall","Math","max","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","indexOf","opera","toLowerCase","test","isElectron","bytes","parseInt","floor","pow","toPrecision","file","fileExtension","splitted","fileFullName","round","random","hyperlink","dispatchEvent","MouseEvent","view","bubbles","cancelable","process","versions","electron","filter","setSrcObject","mozSrcObject","webkitMediaStream","getSeekableBlob","inputBlob","EBML","Reader","decoder","Decoder","tools","fileReader","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","slice","metadataSize","newBlob","readAsArrayBuffer","appVersion","verOffset","ix","nAgt","fullVersion","parseFloat","majorVersion","substring","isNaN","arrayOfBlobs","updateTimeStamp","timestamps","getMimeType","secondObject","clearRecordedDataCB","getArrayOfBlobs","allStates","recorderHints","canRecordMimeType","ondataavailable","recordingCallback","getNativeBlob","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","getAllStates","checkForInactiveTracks","active","ended","isMediaStreamActive","jsAudioNode","leftchannel","rightchannel","recording","desiredSampRate","mergeLeftRightBuffers","mergeAudioBuffers","cb","interleaved","leftBuffers","rightBuffers","internalInterleavedLength","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","atPoint","linearInterpolate","mergeBuffers","channelBuffer","rLength","Float64Array","offset","lng","set","writeUTFBytes","string","setUint8","charCodeAt","leftChannel","rightChannel","inputIndex","index","interleave","interleavedLength","ArrayBuffer","DataView","setUint32","setUint16","setInt16","noWorker","workerURL","terminate","resetVariables","isAudioProcessStarted","isPaused","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","globalCanvas","mediaStreamRecorder","isRecording","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","match","useWhammyRecorder","HTMLCanvasElement","CanvasRenderingContext2D","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","drawFrames","paused","isStopDrawing","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","functionToLoop","asyncLoop","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","r","concat","cloneNode","onloadedmetadata","WhammyVideo","whammyInWebWorker","getClusterData","clusterTimecode","clusterCounter","clusterFrames","map","block","flags","keyframe","invisible","lacing","discardable","trackNum","timecode","fromCharCode","join","makeSimpleBlock","numToBuffer","num","parts","Uint8Array","reverse","bitsToBuffer","bits","substr","generateEBML","json","ebml","len","zeroes","sizeToString","padded","getStrLength","unpadded","parseRIFF","chunks","webm","info","checkFrames","frameNumber","clusterDuration","cluster","riff","VP8","RIFF","WEBP","frameStart","c","parseWebP","atob","add","init","indexedDB","db","dbName","request","onError","onsuccess","setVersion","createObjectStore","putInDB","onupgradeneeded","dataBase","dataStoreName","transaction","getFromStore","portionName","objectStore","put","GIFEncoder","script","isHTMLObject","isLoadedMetaData","offsetWidth","offsetHeight","gifEncoder","setRepeat","setDelay","setQuality","onGifRecordingStarted","now","lastAnimationFrame","drawVideoFrame","time","clearedRecordedData","lastFrameTime","onGifPreview","addFrame","bin","autoplay","playsInline","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","position","zIndex","top","useGainNode","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","onRender","getVideo","volume","resetVideoStreams","streams","startDrawingFrames","appendStreams","audioSource","audioContext","audioDestination","releaseStreams","gainNode","audioSources","source","clearRect","getMixedStream","mixedVideoStream","capturedStream","videoStream","getMixedVideoStream","mixedAudioStream","createGain","gain","audioTracksLength","getMixedAudioStream","mixer","tracks","getAllVideoTracks","previewStream","addStreams","getMixer","finished","cameraStream","controller","cvs","first","onplaying","ctx","frameTimeout","cameraTimer","setInterval","clearInterval","onVideoProcessStarted","_controlledReadableStream","enqueue","fetch","arrayBuffer","addEventListener","timebaseDen","realtime","pipeTo","WritableStream","write","arrayOfBuffers","recordRTC"],"sourceRoot":""}